cmake_minimum_required(VERSION 3.16)
project(NeetCode LANGUAGES CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Compiler flags
set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wpedantic")
set(CMAKE_CXX_FLAGS_DEBUG "-g -O0 -DDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")

# Output directories
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Enable testing
enable_testing()

# Function to add a problem with tests
function(add_neetcode_problem category problem_name)
    set(SOURCE_FILE "${category}/${problem_name}.cpp")
    set(TARGET_NAME "${category}_${problem_name}")

    # Replace spaces and special characters in target name
    string(REPLACE " " "_" TARGET_NAME ${TARGET_NAME})
    string(REPLACE "&" "and" TARGET_NAME ${TARGET_NAME})
    string(REPLACE "/" "_" TARGET_NAME ${TARGET_NAME})
    string(TOLOWER ${TARGET_NAME} TARGET_NAME)

    if(EXISTS "${CMAKE_SOURCE_DIR}/${SOURCE_FILE}")
        # Create executable
        add_executable(${TARGET_NAME} ${SOURCE_FILE})

        # Add test that runs the executable
        add_test(NAME ${TARGET_NAME} COMMAND ${TARGET_NAME})

        message(STATUS "Added problem: ${TARGET_NAME}")
    endif()
endfunction()

# Add all NeetCode 150 problems by category

# Arrays & Hashing (9 problems)
add_neetcode_problem("Arrays & Hashing" "contains_duplicate")
add_neetcode_problem("Arrays & Hashing" "valid_anagram")
add_neetcode_problem("Arrays & Hashing" "two_sum")
add_neetcode_problem("Arrays & Hashing" "group_anagrams")
add_neetcode_problem("Arrays & Hashing" "top_k_frequent_elements")
add_neetcode_problem("Arrays & Hashing" "product_of_array_except_self")
add_neetcode_problem("Arrays & Hashing" "valid_sudoku")
add_neetcode_problem("Arrays & Hashing" "encode_and_decode_strings")
add_neetcode_problem("Arrays & Hashing" "longest_consecutive_sequence")

# Two Pointers (5 problems)
add_neetcode_problem("Two Pointers" "valid_palindrome")
add_neetcode_problem("Two Pointers" "two_sum_ii_input_array_is_sorted")
add_neetcode_problem("Two Pointers" "3sum")
add_neetcode_problem("Two Pointers" "container_with_most_water")
add_neetcode_problem("Two Pointers" "trapping_rain_water")

# Sliding Window (6 problems)
add_neetcode_problem("Sliding Window" "best_time_to_buy_and_sell_stock")
add_neetcode_problem("Sliding Window" "longest_substring_without_repeating_characters")
add_neetcode_problem("Sliding Window" "longest_repeating_character_replacement")
add_neetcode_problem("Sliding Window" "permutation_in_string")
add_neetcode_problem("Sliding Window" "minimum_window_substring")
add_neetcode_problem("Sliding Window" "sliding_window_maximum")

# Stack (7 problems)
add_neetcode_problem("Stack" "valid_parentheses")
add_neetcode_problem("Stack" "min_stack")
add_neetcode_problem("Stack" "evaluate_reverse_polish_notation")
add_neetcode_problem("Stack" "generate_parentheses")
add_neetcode_problem("Stack" "daily_temperatures")
add_neetcode_problem("Stack" "car_fleet")
add_neetcode_problem("Stack" "largest_rectangle_in_histogram")

# Binary Search (7 problems)
add_neetcode_problem("Binary Search" "binary_search")
add_neetcode_problem("Binary Search" "search_a_2d_matrix")
add_neetcode_problem("Binary Search" "koko_eating_bananas")
add_neetcode_problem("Binary Search" "find_minimum_in_rotated_sorted_array")
add_neetcode_problem("Binary Search" "search_in_rotated_sorted_array")
add_neetcode_problem("Binary Search" "time_based_key_value_store")
add_neetcode_problem("Binary Search" "median_of_two_sorted_arrays")

# Linked List (11 problems)
add_neetcode_problem("Linked List" "reverse_linked_list")
add_neetcode_problem("Linked List" "merge_two_sorted_lists")
add_neetcode_problem("Linked List" "reorder_list")
add_neetcode_problem("Linked List" "remove_nth_node_from_end_of_list")
add_neetcode_problem("Linked List" "copy_list_with_random_pointer")
add_neetcode_problem("Linked List" "add_two_numbers")
add_neetcode_problem("Linked List" "linked_list_cycle")
add_neetcode_problem("Linked List" "find_the_duplicate_number")
add_neetcode_problem("Linked List" "lru_cache")
add_neetcode_problem("Linked List" "merge_k_sorted_lists")
add_neetcode_problem("Linked List" "reverse_nodes_in_k_group")

# Trees (15 problems)
add_neetcode_problem("Trees" "invert_binary_tree")
add_neetcode_problem("Trees" "maximum_depth_of_binary_tree")
add_neetcode_problem("Trees" "diameter_of_binary_tree")
add_neetcode_problem("Trees" "balanced_binary_tree")
add_neetcode_problem("Trees" "same_tree")
add_neetcode_problem("Trees" "subtree_of_another_tree")
add_neetcode_problem("Trees" "lowest_common_ancestor_of_a_binary_search_tree")
add_neetcode_problem("Trees" "binary_tree_level_order_traversal")
add_neetcode_problem("Trees" "binary_tree_right_side_view")
add_neetcode_problem("Trees" "count_good_nodes_in_binary_tree")
add_neetcode_problem("Trees" "validate_binary_search_tree")
add_neetcode_problem("Trees" "kth_smallest_element_in_a_bst")
add_neetcode_problem("Trees" "construct_binary_tree_from_preorder_and_inorder_traversal")
add_neetcode_problem("Trees" "binary_tree_maximum_path_sum")
add_neetcode_problem("Trees" "serialize_and_deserialize_binary_tree")

# Tries (3 problems)
add_neetcode_problem("Tries" "implement_trie_prefix_tree")
add_neetcode_problem("Tries" "design_add_and_search_words_data_structure")
add_neetcode_problem("Tries" "word_search_ii")

# Heap & Priority Queue (7 problems)
add_neetcode_problem("Heap & Priority Queue" "kth_largest_element_in_a_stream")
add_neetcode_problem("Heap & Priority Queue" "last_stone_weight")
add_neetcode_problem("Heap & Priority Queue" "k_closest_points_to_origin")
add_neetcode_problem("Heap & Priority Queue" "kth_largest_element_in_an_array")
add_neetcode_problem("Heap & Priority Queue" "task_scheduler")
add_neetcode_problem("Heap & Priority Queue" "design_twitter")
add_neetcode_problem("Heap & Priority Queue" "find_median_from_data_stream")

# Backtracking (9 problems)
add_neetcode_problem("Backtracking" "subsets")
add_neetcode_problem("Backtracking" "combination_sum")
add_neetcode_problem("Backtracking" "permutations")
add_neetcode_problem("Backtracking" "subsets_ii")
add_neetcode_problem("Backtracking" "combination_sum_ii")
add_neetcode_problem("Backtracking" "word_search")
add_neetcode_problem("Backtracking" "palindrome_partitioning")
add_neetcode_problem("Backtracking" "letter_combinations_of_a_phone_number")
add_neetcode_problem("Backtracking" "n_queens")

# Graphs (13 problems)
add_neetcode_problem("Graphs" "number_of_islands")
add_neetcode_problem("Graphs" "clone_graph")
add_neetcode_problem("Graphs" "max_area_of_island")
add_neetcode_problem("Graphs" "pacific_atlantic_water_flow")
add_neetcode_problem("Graphs" "surrounded_regions")
add_neetcode_problem("Graphs" "rotting_oranges")
add_neetcode_problem("Graphs" "walls_and_gates")
add_neetcode_problem("Graphs" "course_schedule")
add_neetcode_problem("Graphs" "course_schedule_ii")
add_neetcode_problem("Graphs" "redundant_connection")
add_neetcode_problem("Graphs" "number_of_connected_components_in_an_undirected_graph")
add_neetcode_problem("Graphs" "graph_valid_tree")
add_neetcode_problem("Graphs" "word_ladder")

# 1-D Dynamic Programming (12 problems)
add_neetcode_problem("1-D Dynamic Programming" "climbing_stairs")
add_neetcode_problem("1-D Dynamic Programming" "min_cost_climbing_stairs")
add_neetcode_problem("1-D Dynamic Programming" "house_robber")
add_neetcode_problem("1-D Dynamic Programming" "house_robber_ii")
add_neetcode_problem("1-D Dynamic Programming" "longest_palindromic_substring")
add_neetcode_problem("1-D Dynamic Programming" "palindromic_substrings")
add_neetcode_problem("1-D Dynamic Programming" "decode_ways")
add_neetcode_problem("1-D Dynamic Programming" "coin_change")
add_neetcode_problem("1-D Dynamic Programming" "maximum_product_subarray")
add_neetcode_problem("1-D Dynamic Programming" "word_break")
add_neetcode_problem("1-D Dynamic Programming" "longest_increasing_subsequence")
add_neetcode_problem("1-D Dynamic Programming" "partition_equal_subset_sum")

# Intervals (5 problems)
add_neetcode_problem("Intervals" "insert_interval")
add_neetcode_problem("Intervals" "merge_intervals")
add_neetcode_problem("Intervals" "non_overlapping_intervals")
add_neetcode_problem("Intervals" "meeting_rooms")
add_neetcode_problem("Intervals" "meeting_rooms_ii")

# Greedy (8 problems)
add_neetcode_problem("Greedy" "maximum_subarray")
add_neetcode_problem("Greedy" "jump_game")
add_neetcode_problem("Greedy" "jump_game_ii")
add_neetcode_problem("Greedy" "gas_station")
add_neetcode_problem("Greedy" "hand_of_straights")
add_neetcode_problem("Greedy" "merge_triplets_to_form_target_triplet")
add_neetcode_problem("Greedy" "partition_labels")
add_neetcode_problem("Greedy" "valid_parenthesis_string")

# Advanced Graphs (6 problems)
add_neetcode_problem("Advanced Graphs" "reconstruct_itinerary")
add_neetcode_problem("Advanced Graphs" "min_cost_to_connect_all_points")
add_neetcode_problem("Advanced Graphs" "network_delay_time")
add_neetcode_problem("Advanced Graphs" "swim_in_rising_water")
add_neetcode_problem("Advanced Graphs" "alien_dictionary")
add_neetcode_problem("Advanced Graphs" "cheapest_flights_within_k_stops")

# 2-D Dynamic Programming (11 problems)
add_neetcode_problem("2-D Dynamic Programming" "unique_paths")
add_neetcode_problem("2-D Dynamic Programming" "longest_common_subsequence")
add_neetcode_problem("2-D Dynamic Programming" "best_time_to_buy_and_sell_stock_with_cooldown")
add_neetcode_problem("2-D Dynamic Programming" "coin_change_ii")
add_neetcode_problem("2-D Dynamic Programming" "target_sum")
add_neetcode_problem("2-D Dynamic Programming" "interleaving_string")
add_neetcode_problem("2-D Dynamic Programming" "longest_increasing_path_in_a_matrix")
add_neetcode_problem("2-D Dynamic Programming" "distinct_subsequences")
add_neetcode_problem("2-D Dynamic Programming" "edit_distance")
add_neetcode_problem("2-D Dynamic Programming" "burst_balloons")
add_neetcode_problem("2-D Dynamic Programming" "regular_expression_matching")

# Bit Manipulation (7 problems)
add_neetcode_problem("Bit Manipulation" "single_number")
add_neetcode_problem("Bit Manipulation" "number_of_1_bits")
add_neetcode_problem("Bit Manipulation" "counting_bits")
add_neetcode_problem("Bit Manipulation" "reverse_bits")
add_neetcode_problem("Bit Manipulation" "missing_number")
add_neetcode_problem("Bit Manipulation" "sum_of_two_integers")
add_neetcode_problem("Bit Manipulation" "reverse_integer")

# Math & Geometry (8 problems)
add_neetcode_problem("Math & Geometry" "rotate_image")
add_neetcode_problem("Math & Geometry" "spiral_matrix")
add_neetcode_problem("Math & Geometry" "set_matrix_zeroes")
add_neetcode_problem("Math & Geometry" "happy_number")
add_neetcode_problem("Math & Geometry" "plus_one")
add_neetcode_problem("Math & Geometry" "pow_x_n")
add_neetcode_problem("Math & Geometry" "multiply_strings")
add_neetcode_problem("Math & Geometry" "detect_squares")

# Print build information
message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "C++ compiler: ${CMAKE_CXX_COMPILER}")
